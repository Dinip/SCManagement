@model IEnumerable<SCManagement.Models.Event>
@inject IStringLocalizer<SharedResource> StringLocalizer

@{
    ViewData["Title"] = @StringLocalizer["Events"];
}

<link rel="stylesheet" href="~/lib/DataTables/DataTables-1.13.3/css/dataTables.bootstrap.css">
<link rel="stylesheet" href="~/lib/DataTables/Responsive-2.4.0/css/responsive.bootstrap.css">

<div class="container-fluid ps-5 pe-5">
    <h1 style="margin-top:130px !important;" class="text-to-dark">@StringLocalizer["Events"]</h1>
    <hr />
    <div class="card mt-5 shadow" style="min-height:650px !important; height:fit-content !important; border-radius:20px;">
        <div class="card-body">
            @if (ViewBag.IsStaff != null && ViewBag.IsStaff == true)
            {
                <div class="mb-4 mt-2">
                    <a asp-action="Create" style="color:white; border-radius: 10px; background-color: #00639A; border-color: #00639A; padding: 6px 12px; text-decoration:none;">@StringLocalizer["Create New"]</a>
                </div>
            }
            <div class="mb-4 mt-2">
                <input id="FilterEvent0" name="FilterEvent" value="0" type="radio" style="accent-color: #00639A">
                <label for="FilterEvent0" class="text-to-dark">@StringLocalizer["All"]</label>

                <input id="FilterEvent1" name="FilterEvent" value="1" type="radio" style="accent-color: #00639A" class="ms-2">
                <label for="FilterEvent1" class="text-to-dark">@StringLocalizer["InProgress"]</label>

                <input id="FilterEvent2" name="FilterEvent" value="2" type="radio" style="accent-color: #00639A" class="ms-2">
                <label for="FilterEvent2" class="text-to-dark">@StringLocalizer["Finished"]</label>

                <input id="FilterEvent3" name="FilterEvent" value="3" type="radio" style="accent-color: #00639A" class="ms-2">
                <label for="FilterEvent3" class="text-to-dark">@StringLocalizer["Futures"]</label>
            </div>

            <table id="table_id" class="display text-to-dark" style="width:100%!important;">
                <thead>
                    <tr>
                        <th class="text-to-dark">
                            @StringLocalizer["Name"]
                        </th>
                        <th class="text-to-dark">
                            @Html.DisplayNameFor(model => model.StartDate)
                        </th>
                        <th class="text-to-dark">
                            @Html.DisplayNameFor(model => model.EndDate)
                        </th>
                        <th class="text-to-dark">
                            @StringLocalizer["CreatedBy"]
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody class="text-to-dark">
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="text-to-dark">
                                @Html.DisplayFor(model => item.EventTranslations.FirstOrDefault(c => c.Atribute == "Name").Value)
                            </td>
                            <td class="text-to-dark">
                                @Html.DisplayFor(modelItem => item.StartDate)
                            </td>
                            <td class="text-to-dark">
                                @Html.DisplayFor(modelItem => item.EndDate)
                            </td>
                            <td class="text-to-dark">
                                @Html.DisplayFor(modelItem => item.Club.Name)
                            </td>
                            <td>
                                <div class="d-flex justify-content-end">
                                    <a asp-action="Details" asp-route-id="@item.Id" style="color:white; border-radius: 10px; background-color: #00639A; border-color: #00639A; padding: 6px 12px; text-decoration:none;">@StringLocalizer["Details"]</a>
                                </div>
                                
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script src="~/js/site.js" asp-append-version="true"></script>
<script type="text/javascript" charset="utf8" src="/lib/jquery/dist/jquery.js"></script>
<script type="text/javascript" charset="utf8" src="/lib/DataTables/DataTables-1.13.3/js/jquery.dataTables.js"></script>
<script type="text/javascript" charset="utf8" src="/lib/DataTables/Responsive-2.4.0/js/dataTables.responsive.js"></script>
<script type="text/javascript" charset="utf8" src="/lib/DataTables/datatables.min.js"></script>
<script type="text/javascript">
    $(window).on('load', function () {
        $(document).ready(function () {
            $.noConflict();
            $("#table_id").DataTable({
                responsive: true,
                columnDefs: [
                    { orderable: false, targets: [-1] }
                ],
                language: {
                    "lengthMenu": "@StringLocalizer["Show"] _MENU_ @StringLocalizer["EntriesDatatable"]",
                    "emptyTable": "@StringLocalizer["EmptyMessage"]",
                    "search": "@StringLocalizer["Search"]",
                    "zeroRecords": "@StringLocalizer["NoMatching"]",
                    "processing": "@StringLocalizer["Processing"]",
                    "infoFiltered": "(@StringLocalizer["Filtered"] @StringLocalizer["From"] _MAX_ total @StringLocalizer["EntriesDatatable"])",
                    "info": "@StringLocalizer["Showing"] _START_ @StringLocalizer["To"] _END_ @StringLocalizer["OfDatatable"] _TOTAL_ @StringLocalizer["EntriesDatatable"]",
                    "infoEmpty": "@StringLocalizer["Showing"] 0 @StringLocalizer["OfDatatable"] 0 @StringLocalizer["EntriesDatatable"]",
                    "paginate": {
                        first: "@StringLocalizer["First"]",
                        last: "@StringLocalizer["Last"]",
                        next: "@StringLocalizer["Next"]",
                        previous: "@StringLocalizer["Previous"]",
                    },
                },
                initComplete: function (settings, json) {
                    $('#table_id_wrapper').addClass("text-to-dark");
                    $("input[aria-controls='table_id']").addClass("text-to-dark");
                },
            });
            setTheme(localStorage.getItem("theme") || "light")

            // Adiciona um evento onchange aos botões de opção
            let radioButtons = document.querySelectorAll('input[type="radio"][name="FilterEvent"]');
            for (let i = 0; i < radioButtons.length; i++) {
                radioButtons[i].addEventListener('change', filterEvents);
            }

            // Mantém o botão de opção verificado de acordo com o parâmetro "filterEvent" na URL
            const urlParams = new URLSearchParams(window.location.search);
            const filterValue = urlParams.get('filterEvent');
            if (filterValue !== null) {
                document.getElementById(`FilterEvent${filterValue}`).checked = true;
            } else {
                document.getElementById(`FilterEvent0`).checked = true;
            }

        });

        // Filtra a lista de eventos com base no botão de opção selecionado
        function filterEvents() {
            var filterValue = this.value;
            window.location.href = `/Events/?filterEvent=${filterValue}`;

        }
    
    });
    


</script>





@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
