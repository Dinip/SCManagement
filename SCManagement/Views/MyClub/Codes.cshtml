@model IEnumerable<SCManagement.Models.CodeClub>
@inject IStringLocalizer<SharedResource> StringLocalizer

@{
    ViewData["Title"] = "CodesList";
}


<div class="container-fluid ps-5 pe-5">
    <h1 style="margin-top:130px !important;" class="text-to-dark">@StringLocalizer["Codes"]</h1>
    <p>
        <button onclick="openCreate()">@StringLocalizer["Create New"]</button>
    </p>
    <div class="card mt-5 shadow" style="height:650px !important;  border-radius:20px;">
        <div class="card-body">
            <div id="modal" class="modal">
                <div class="modal-content" style="margin-top:7%; margin-bottom:0;">
                    <span onclick="$('#modal').hide()" class="close">&times;</span>
                    <div id="modal-inner-content">
                        @if (ViewBag.Code != null)
                        {
                            @await Html.PartialAsync("_PartialShowCode", (CodeClub)ViewBag.Code)
                        }
                        @if (ViewBag.ApprovedCodeStatus != null)
                        {
                            @await Html.PartialAsync("_PartialShowCode", Model.First(f=>f.Code == ViewBag.ApprovedCode))
                        }
                    </div>
                </div>
            </div>
            <table id="table_id" class="display">
                <thead>
                    <tr>
                        <th class="text-to-dark">
                            @Html.DisplayNameFor(model => model.Code)
                        </th>
                        <th class="text-to-dark">
                            @Html.DisplayNameFor(model => model.CreationDate)
                        </th>
                        <th class="text-to-dark">
                            @Html.DisplayNameFor(model => model.ExpireDate)
                        </th>
                        <th class="text-to-dark">
                            @Html.DisplayNameFor(model => model.UsedDate)
                        </th>
                        <th class="text-to-dark">
                            @Html.DisplayNameFor(model => model.Approved)
                        </th>
                        <th class="text-to-dark">
                            @Html.DisplayNameFor(model => model.Role)
                        </th>
                        <th class="text-to-dark">
                            @Html.DisplayNameFor(model => model.CreatedByUser)
                        </th>
                        <th class="text-to-dark">
                            @Html.DisplayNameFor(model => model.UsedByUser)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="text-to-dark">
                                @Html.DisplayFor(modelItem => item.Code)
                            </td>
                            <td class="text-to-dark">
                                @Html.DisplayFor(modelItem => item.CreationDate)
                            </td>
                            <td class="text-to-dark">
                                @Html.DisplayFor(modelItem => item.ExpireDate)
                            </td>
                            <td class ="text-to-dark">
                                @Html.DisplayFor(modelItem => item.UsedDate)
                            </td>
                            <td class="text-to-dark">
                                @Html.DisplayFor(modelItem => item.Approved)
                            </td>
                            <td class="text-to-dark">
                                @Html.DisplayFor(modelItem => item.Role.RoleName)
                            </td>
                            <td class="text-to-dark">
                                @Html.DisplayFor(modelItem => item.CreatedByUser.FullName)
                            </td>
                            <td class="text-to-dark">
                                @Html.DisplayFor(modelItem => item.UsedByUser.FullName)
                            </td>
                            <td>
                                <a href="/MyClub/Codes?code=@item.Id">@StringLocalizer["Details"]</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script type="text/javascript" charset="utf8" src="/lib/jquery/dist/jquery.js"></script>
<script type="text/javascript" charset="utf8" src="/lib/DataTables/datatables.min.js"></script>
<script type="text/javascript">
    let modal = document.getElementById("modal");
    
    window.onclick = function (event) {
        if (event.target == modal) {
            $("#modal").hide();
        }
    }

    $(document).ready(function () {
        $.noConflict();
        $("#table_id").DataTable({
            order: [[1, 'desc']],
            columnDefs: [
                { orderable: false, targets: [-1] }
            ]
        });
    });

    function openCreate() {
        $.ajax({
            url: '/MyClub/CreateCode',
            type: 'GET',
            async: false,
            success: function (result) {
                $("#modal-inner-content").html(result);
                $("#modal").show();
            }
        });
    }
</script>
