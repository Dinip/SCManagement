@*@model SCManagement.Services.PaymentService.Models.PayPayment
@inject IStringLocalizer<SharedResource> StringLocalizer

@{
    ViewData["Title"] = "Payment for PRODUCT";
}

<style>
    .cc-selector input {
        margin: 0;
        padding: 0;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
    }

    .creditcard {
        background-image: url(https://cdn.scmanagement.me/public/visamc_nobg.png);
    }

    .mbway {
        background-image: url(https://cdn.scmanagement.me/public/mbway_nobg.png);
    }

    .reference {
        background-image: url(https://cdn.scmanagement.me/public/mb_nobg.png);
    }

    .cc-selector input:active + .card-cc {
        opacity: .9;
    }

    .cc-selector input:checked + .card-cc {
        -webkit-filter: none;
        -moz-filter: none;
        filter: none;
    }

    .card-cc {
        cursor: pointer;
        background-size: contain;
        background-repeat: no-repeat;
        background-position: center;
        display: inline-block;
        width: 100px;
        height: 70px;
        -webkit-transition: all 100ms ease-in;
        -moz-transition: all 100ms ease-in;
        transition: all 100ms ease-in;
        -webkit-filter: brightness(1.8) grayscale(0.9) opacity(.7);
        -moz-filter: brightness(1.8) grayscale(0.9) opacity(.7);
        filter: brightness(1.8) grayscale(0.9) opacity(.7);
    }

        .card-cc:hover {
            -webkit-filter: brightness(1.2) opacity(.9);
            -moz-filter: brightness(1.2) opacity(.9);
            filter: brightness(1.2) opacity(.9);
        }

</style>

<div>
    <h4>Product</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product.Value)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product.Value)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product.ProductType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product.ProductType)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product.Club)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product.Club.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product.IsSubscription)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product.IsSubscription)
        </dd>
        @if (Model.Product.IsSubscription)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Product.Frequency)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Product.Frequency)
            </dd>
        }
    </dl>

    <form asp-action="CreatePayment">
        <input hidden asp-for="ProductId" />

        <label asp-for="AutoRenew"> Should autorenew? </label>
        <input asp-for="AutoRenew" type="checkbox" onclick="handleAutoRenewToggle(this)" />

        <div class="cc-selector">
            @foreach (var method in ViewBag.PaymentMethods)
            {
                <input type="radio" asp-for="PaymentMethod" id="@method.Name.ToLower()" name="PaymentMethod" value="@method.Id" />
                <label class="card-cc @method.Name.ToLower()" for="@method.Name.ToLower()"></label>
            }
        </div>

        <input asp-for="PhoneNumber" type="tel" placeholder="961234567" pattern="[0-9]{9}" />

        <input type="submit" style="border-radius: 10px; background-color: #00639A; border-color: #00639A;" value=@StringLocalizer["Complete Payment"] class="btn btn-primary" />
    </form>
</div>

<script>
    const handleAutoRenewToggle = (event) => {
        const labels = document.querySelectorAll('label.card-cc')
        if (event.checked) {
            //remove all methods and keep credit card
            for (let label of labels) {
                if (label.getAttribute("for") != "creditcard") {
                    label.classList.add("d-none")
                    document.getElementById(label.getAttribute("for")).checked = false
                } else {
                    document.getElementById(label.getAttribute("for")).checked = true
                }
            }
        } else {
            //show all methods
            for (let label of labels) {
                if (!label.classList.contains("creditcard")) {
                    label.classList.remove("d-none")
                }
            }
        }
    }
</script>*@